##토마토 문제
#창고에 보관되는 토마토들 중에는 잘 익은 것도 있지만, 
# 아직 익지 않은 토마토들도 있을 수 있다. 보관 후 하루가 지나면,
# 익은 토마토들의 인접한 곳에 있는 익지 않은 토마토들은 익은 토마토의 영향을 받아 익게 된다. 
# 하나의 토마토의 인접한 곳은 왼쪽, 오른쪽, 앞, 뒤 네 방향에 있는 토마토를 의미한다. 대각선 방향에 있는 토마토들에게는 영향을 주지 못하며, 
# 토마토가 혼자 저절로 익는 경우는 없다고 가정한다. 
# 철수는 창고에 보관된 토마토들이 며칠이 지나면 다 익게 되는지, 그 최소 일수를 알고 싶어 한다.

# n=세로  m= 가로

from collections import deque
m, n = map(int,input().split())
graph = [list(map(int,input().split()))for i in range(n)]
days =1
dx = [-1,1,0,0] # 좌우
dy = [0,0,-1,1] # 상하
unrised=0
q=deque()
ck = 0
cnt =0
for i in range(n):
    for j in range(m):
        if graph[i][j]==1:
            q.append((i,j,cnt))
        elif graph[i][j]==0:
            unrised+=1
if unrised==0 and ck!=0:
    ck=-1
while q:
    y,x,cnt= q.popleft()
    for way in range(4):
        ny, nx = dy[way]+y, dx[way]+x
        if ny<0 or ny>=n or nx<0 or nx>=m:
            continue
        if graph[ny][nx]==-1:
            continue
        if graph[ny][nx]==0:
            graph[ny][nx]=1
            q.append((ny,nx,cnt+1))
            unrised-=1

if unrised!=0:
    print(-1)
elif unrised==0:
    if cnt>0:
        print(cnt)
    else:
        print(0)
