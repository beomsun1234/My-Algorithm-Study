### 체스판 다시 칠하기

# 지민이는 자신의 저택에서 MN개의 단위 정사각형으로 나누어져 있는 M*N 크기의 보드를 찾았다. 
# 어떤 정사각형은 검은색으로 칠해져 있고, 나머지는 흰색으로 칠해져 있다. 
# 지민이는 이 보드를 잘라서 8*8 크기의 체스판으로 만들려고 한다.

# 체스판은 검은색과 흰색이 번갈아서 칠해져 있어야 한다. 
# 구체적으로, 각 칸이 검은색과 흰색 중 하나로 색칠되어 있고, 변을 공유하는 두 개의 사각형은 다른 색으로 칠해져 있어야 한다. 
# 따라서 이 정의를 따르면 체스판을 색칠하는 경우는 두 가지뿐이다. 하나는 맨 왼쪽 위 칸이 흰색인 경우, 하나는 검은색인 경우이다.
# 보드가 체스판처럼 칠해져 있다는 보장이 없어서, 
# 지민이는 8*8 크기의 체스판으로 잘라낸 후에 몇 개의 정사각형을 다시 칠해야겠다고 생각했다.
# 당연히 8*8 크기는 아무데서나 골라도 된다. 지민이가 다시 칠해야 하는 정사각형의 최소 개수를 구하는 프로그램을 작성하시오.
### https://god-gil.tistory.com/62
import sys
input = sys.stdin.readline
def solve(a,b):
    result=0
    ck1=0
    ck2=0
    for x in range(a,a+8):
        for y in range(b,b+8):
            if (x+y)%2==0:
                if chase[x][y]!='W':
                    ck1+=1
            else:
                if chase[x][y]!='B':
                    ck1+=1
    for x in range(a,a+8):
        for y in range(b,b+8):
            if (x+y)%2==0:
                if chase[x][y]!='B':
                    ck2+=1
            else:
                if chase[x][y]!='W':
                    ck2+=1


    return min(ck1,ck2)

           
n,m = map(int,input().split())
chase = [list(map(str,input())) for _ in range(n)]
cc=64
tmp=0
### 체스판 자르기 8x8로
for i in range(n-7):
    for j in range(m-7):
        tmp=solve(i,j)
        cc=min(cc,tmp)
print(cc)
          
##1. 먼저 N*M만큼의 보드를 받아온다.

#2. 8*8로 잘라야 하기에, 행으로 i-7만큼, 열로 j-7만큼 고정시켜 줘야 한다. 이 방법이 아니고서는 인덱스 에러를 잡을 방법을 모르겠다.

#3. 고정시키고 난 이후는, i,j에서 i+8까지, j+8까지 전부 반복하면서 알맞게 체크무늬로 칠해져 있는지 확인한다.

#4. 흰색이 먼저인 경우와 검은색이 먼저있는 경우를 나누어서, 한번에 종합한 후, min()을 사용하여, 최소값을 알아낸다.
        
#먼저, i와 j로 8*8의 최대 크기를 조절해 준다.

#왜냐하면, 9*9 보드에서 자를 수 있는 경우의 수는, 2*2로 4가지이다.

#또, 10*10 보드에서 자를 수 있는 경우의 수는 3*3으로 9가지이다.

#즉, N*M 보드에서 자를 수 있는 경우의 수는 N-i * M-j 가지가 된다.

#이후에 흰색으로 시작한 경우, 검은색으로 시작한 경우의 값을 초기화 해 준 뒤,

#k와 l을 통해서 처음 자른 체스판부터 검사를 시작한다. 여기서, 조건문을 보면, 

#( k + l ) %2 == 0을 사용했는데, 이 이유는, 
# 행과 열의 인덱스의 합이 짝수인경우, 일정한 한 색을 가지게 되고, 홀수인 경우에도, 다른 일정한 한 색을 가지게 된다.
